{
    "openapi": "3.0.0",
    "info": {
      "title": "Internal GTB Swagger",
      "description": "Internal GTB server API",
      "contact": {
        "email": "developer@energie-ip.com"
      },
      "version": "1.0"
    },
    "servers": [
      {
        "url": "/{basePath}",
        "variables": {
          "basePath": {
            "default": "v1.0"
          }
        }
      }
    ],
    "paths": {
      "/command/led": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendLedCommand",
          "description": "Send LED command",
          "operationId": "SendLedCommand",
          "parameters": [],
          "requestBody": {
            "description": "LED Command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      },
      "/command/blind": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendBlindCommand",
          "description": "Send Blind command",
          "operationId": "SendBlindCommand",
          "parameters": [],
          "requestBody": {
            "description": "Blind Command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlindCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      },
      "/command/hvac": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendHvacCommand",
          "description": "Send Hvac command",
          "operationId": "SendHvacCommand",
          "parameters": [],
          "requestBody": {
            "description": "Hvac Command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HvacCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      },
      "/command/group": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendGroupCommand",
          "description": "Send Group command",
          "operationId": "SendGroupCommand",
          "parameters": [],
          "requestBody": {
            "description": "Group command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      },
      "/dump": {
        "get": {
          "tags": [
            "dump"
          ],
          "summary": "getDump",
          "description": "Dump the Complete dump with filter",
          "operationId": "GetDump",
          "parameters": [
            {
              "name": "macs",
              "in": "query",
              "description": "Filter by mac address. By default: all",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "labels",
              "in": "query",
              "description": "Filter by IFC label. By default: all",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Dump"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      },
      "/functions": {
        "get": {
          "summary": "getFunctions",
          "description": "Return the list of available API functions",
          "operationId": "GetFunctions",
          "parameters": [],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/getFunctionsResponse"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      }
    },
    "components": {
      "schemas": {
        "SensorSetup": {
          "title": "SensorSetup",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Sensor mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "brightnessCorrectionFactor": {
              "type": "integer",
              "description": "Brightness correction factor",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Sensor FriendlyName"
            },
            "thresholdPresence": {
              "type": "integer",
              "description": "Threshold presence",
              "format": "int32"
            },
            "temperatureOffset": {
              "type": "integer",
              "description": "Temperature offset correction",
              "format": "int32"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "ActionProfile": {
          "title": "ActionProfile",
          "required": [
            "action"
          ],
          "type": "object",
          "properties": {
            "action": {
              "type": "integer",
              "description": "Action on the Blind: 0:stop, 1 Openning, 2: Closing",
              "format": "int32"
            },
            "duration": {
              "type": "integer",
              "description": "Action duration in milliseconds",
              "format": "int32"
            }
          }
        },
        "BlindProfile": {
          "title": "BlindProfile",
          "required": [
            "up",
            "down",
            "stop",
            "windowOpen",
            "slatDuration"
          ],
          "type": "object",
          "properties": {
            "up": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionProfile"
              },
              "description": "Action sequences"
            },
            "down": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionProfile"
              },
              "description": "Action sequences"
            },
            "stop": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionProfile"
              },
              "description": "Action sequences"
            },
            "windowOpen": {
              "type": "boolean",
              "description": "When the window is open, is the driver still up and running?"
            },
            "slatDuration": {
              "type": "string",
              "description": "Timing for the slat configuration in Milliseconds"
            }
          }
        },
        "BlindSetup": {
          "title": "BlindSetup",
          "required": [
            "mac",
            "profile"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Blind mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "profile": {
              "$ref": "#/components/schemas/BlindProfile"
            },
            "friendlyName": {
              "type": "string",
              "description": "BLIND FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "BlindCommand": {
          "title": "BlindCommand",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Blind mac address"
            },
            "blind1": {
              "type": "integer",
              "description": "blind1 0: stop, 1: Openning, 2: Closing",
              "format": "int32"
            },
            "blind2": {
              "type": "integer",
              "description": "blind2 0: stop, 1: Openning, 2: Closing",
              "format": "int32"
            },
            "slat1": {
              "type": "integer",
              "description": "Slat orientation",
              "format": "int32"
            },
            "slat2": {
              "type": "integer",
              "description": "Slat orientation",
              "format": "int32"
            }
          }
        },
        "HvacSetup": {
          "title": "HvacSetup",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Hvac mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "HVAC FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "HvacCommand": {
          "title": "HvacCommand",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Hvac mac address"
            }
          }
        },
        "LedSetup": {
          "title": "LedSetup",
          "required": [
            "mac",
            "pMax"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "LED mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "pMax": {
              "type": "integer",
              "description": "pMax",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "thresholdLow": {
              "type": "integer",
              "description": "Threshold low in percentage",
              "format": "int32"
            },
            "thresholdHigh": {
              "type": "integer",
              "description": "Threshold high in percentage",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "LED FriendlyName"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            }
          }
        },
        "LedCommand": {
          "title": "LedCommand",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Led mac address"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "setpoint": {
              "type": "integer",
              "description": "Setpoint value in percentage",
              "format": "int32"
            }
          }
        },
        "SwitchConfig": {
          "title": "SwitchConfig",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Switch mac address"
            },
            "cluster": {
              "type": "integer",
              "description": "Associate Cluster number",
              "format": "int32"
            },
            "ip": {
              "type": "string",
              "description": "Switch IP address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Reset the led configuration"
            },
            "friendlyName": {
              "type": "string",
              "description": "SWITCH FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "IfcInfo": {
          "title": "IfcInfo",
          "required": [
            "label"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "description": "label name available in the IFC for identifying the element"
            },
            "modelName": {
              "type": "string",
              "description": "Model name"
            },
            "mac": {
              "type": "string",
              "description": "device mac address"
            },
            "vendor": {
              "type": "string",
              "description": "vendor name"
            },
            "deviceType": {
              "$ref": "#/components/schemas/DeviceType"
            },
            "url": {
              "type": "string",
              "description": "weblink to the technical description"
            },
            "modbusID": {
              "type": "integer",
              "description": "Modbus unique ID",
              "format": "int32"
            }
          }
        },
        "GroupStatus": {
          "title": "GroupStatus",
          "required": [
            "group"
          ],
          "type": "object",
          "properties": {
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "slopeStartManual": {
              "type": "integer",
              "description": "slopeStart Manual in second",
              "format": "int32"
            },
            "slopeStopManual": {
              "type": "integer",
              "description": "slopeStop Manual in second",
              "format": "int32"
            },
            "slopeStartAuto": {
              "type": "integer",
              "description": "slopeStart Auto in second",
              "format": "int32"
            },
            "slopeStopAuto": {
              "type": "integer",
              "description": "slopeStop Auto in second",
              "format": "int32"
            },
            "sensorRule": {
              "$ref": "#/components/schemas/SensorRule"
            },
            "correctionInterval": {
              "type": "integer",
              "description": "correctionInterval in second",
              "format": "int32"
            },
            "leds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses"
            },
            "sensors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of Sensor mac addresses"
            },
            "ruleBrightness": {
              "type": "integer",
              "description": "Brightness in Lux",
              "format": "int32"
            },
            "firstDayOffset": {
              "type": "integer",
              "description": "Offset in percentage between 1st and 2nd Days",
              "format": "int32"
            },
            "rulePresence": {
              "type": "integer",
              "description": "Presence in Second",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "presence": {
              "type": "boolean",
              "description": "is set to true if at least one sensor detect a movement"
            },
            "brightness": {
              "type": "integer",
              "description": "Compute Brightness in the group (Lux)",
              "format": "int32"
            },
            "temperature": {
              "type": "integer",
              "description": "Compute Temperature in the group (1/10°C)",
              "format": "int32"
            },
            "humidity": {
              "type": "integer",
              "description": "Compute Humidity in the group (1/10%)",
              "format": "int32"
            },
            "windowsOpened": {
              "type": "boolean",
              "description": "is set to true if at least one window is opened"
            },
            "timeToAuto": {
              "type": "integer",
              "description": "Remaining time before switching back to auto mode",
              "format": "int32"
            },
            "timeToLeave": {
              "type": "integer",
              "description": "Remaining time before considering the room as empty",
              "format": "int32"
            },
            "setpointLeds": {
              "type": "integer",
              "description": "Current led setpoint value in percentage",
              "format": "int32"
            },
            "firstDay": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses which are in 1st Day"
            },
            "setpointLedsFirstDay": {
              "type": "integer",
              "description": "Current led setpoint value in percentage for the 1st Day",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Sensor FriendlyName"
            }
          }
        },
        "GroupConfig": {
          "title": "GroupConfig",
          "required": [
            "group"
          ],
          "type": "object",
          "properties": {
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "slopeStartAuto": {
              "type": "integer",
              "description": "slopeStart Auto in second",
              "format": "int32"
            },
            "slopeStopAuto": {
              "type": "integer",
              "description": "slopeStop Auto in second",
              "format": "int32"
            },
            "slopeStartManual": {
              "type": "integer",
              "description": "slopeStart Manual in second",
              "format": "int32"
            },
            "slopeStopManual": {
              "type": "integer",
              "description": "slopeStop Manual in second",
              "format": "int32"
            },
            "sensorRule": {
              "$ref": "#/components/schemas/SensorRule"
            },
            "correctionInterval": {
              "type": "integer",
              "description": "correctionInterval in second",
              "format": "int32"
            },
            "leds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses"
            },
            "sensors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of Sensor mac addresses"
            },
            "ruleBrightness": {
              "type": "integer",
              "description": "Brightness in Lux",
              "format": "int32"
            },
            "rulePresence": {
              "type": "integer",
              "description": "Presence in Second",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Group FriendlyName"
            },
            "firstDay": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses which are in 1st Day"
            },
            "firstDayOffset": {
              "type": "integer",
              "description": "Offset in percentage between 1st and 2nd Days",
              "format": "int32"
            }
          }
        },
        "GroupCommand": {
          "title": "GroupCommand",
          "required": [
            "group"
          ],
          "type": "object",
          "properties": {
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "setpointLeds": {
              "type": "integer",
              "description": "Led Setpoint value",
              "format": "int32"
            },
            "setpointBlinds": {
              "type": "integer",
              "description": "Blind Setoint value",
              "format": "int32"
            },
            "setpointSlats": {
              "type": "integer",
              "description": "Slat Setoint value",
              "format": "int32"
            }
          }
        },
        "SensorStatus": {
          "title": "SensorStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Sensor mac address"
            },
            "ip": {
              "type": "string",
              "description": "Sensor IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "Sensor communication protocol"
            },
            "topic": {
              "type": "string",
              "description": "Sensor communication topic"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the sensor configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "Sensor Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "Sensor Hardware version"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "Is the bluetooth activate"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "temperature": {
              "type": "integer",
              "description": "Temperature",
              "format": "int32"
            },
            "humidity": {
              "type": "integer",
              "description": "Humidity in percentage",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "brightness": {
              "type": "integer",
              "description": "Corrected Brightness in Lux",
              "format": "int32"
            },
            "presence": {
              "type": "boolean",
              "description": "Presence"
            },
            "brightnessCorrectionFactor": {
              "type": "integer",
              "description": "Brightness correction factor",
              "format": "int32"
            },
            "thresholdPresence": {
              "type": "integer",
              "description": "Threshold presence in Seconds",
              "format": "int32"
            },
            "temperatureOffset": {
              "type": "integer",
              "description": "Temperature offset correcion",
              "format": "int32"
            },
            "brightnessRaw": {
              "type": "integer",
              "description": "Brightness Raw value in Lux",
              "format": "int32"
            },
            "lastMovement": {
              "type": "integer",
              "description": "Last Movement date",
              "format": "int32"
            },
            "voltageInput": {
              "type": "integer",
              "description": "Input voltage",
              "format": "int32"
            },
            "temperatureRaw": {
              "type": "integer",
              "description": "Temperature Raw value",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Sensor FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "Dump": {
          "title": "Dump",
          "type": "object",
          "properties": {
            "leds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LedDump"
              },
              "description": "List of leds dump"
            },
            "sensors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SensorDump"
              },
              "description": "List of sensors dump"
            },
            "blinds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlindDump"
              },
              "description": "List of blinds dump"
            },
            "hvacs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HvacDump"
              },
              "description": "List of hvacs dump"
            },
            "switchs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SwitchDump"
              },
              "description": "List of switchs dump"
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupDump"
              },
              "description": "List of groups dump"
            }
          }
        },
        "LedDump": {
          "title": "LedDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/LedStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/LedSetup"
            }
          }
        },
        "SensorDump": {
          "title": "SensorDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/SensorStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/SensorSetup"
            }
          }
        },
        "BlindDump": {
          "title": "BlindDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/BlindStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/BlindSetup"
            }
          }
        },
        "HvacDump": {
          "title": "HvacDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/HvacStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/HvacSetup"
            }
          }
        },
        "GroupDump": {
          "title": "GroupDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/GroupStatus"
            },
            "config": {
              "$ref": "#/components/schemas/GroupConfig"
            }
          }
        },
        "SwitchDump": {
          "title": "SwitchDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/SwitchStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/SwitchConfig"
            }
          }
        },
        "SwitchStatus": {
          "title": "SwitchStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "LED mac address"
            },
            "ip": {
              "type": "string",
              "description": "Led IP address"
            },
            "cluster": {
              "type": "integer",
              "description": "Associate cluster",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "SWITCH communication protocol"
            },
            "topic": {
              "type": "string",
              "description": "SWITCH communication topic"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the SWITCH configured"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "SWITCH FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "lastSystemUpgradeDate": {
              "type": "string",
              "description": "Last system upgrade date"
            }
          }
        },
        "HvacStatus": {
          "title": "HvacStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Hvac mac address"
            },
            "ip": {
              "type": "string",
              "description": "Hvac IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "Hvac communication protocol"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the hvac configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "hvac Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "hvac Hardware version"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Hvac FriendlyName"
            },
            "setpoint": {
              "type": "string",
              "description": "current setpoint"
            },
            "heat": {
              "type": "string",
              "description": "setpoint when the mode is heating"
            },
            "cool": {
              "type": "string",
              "description": "setpoint when the mode is cooling"
            },
            "damper": {
              "type": "string",
              "description": "damper"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "BlindStatus": {
          "title": "BlindStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "BLIND mac address"
            },
            "ip": {
              "type": "string",
              "description": "BLIND IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "BLIND communication protocol"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the blind configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "BLIND Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "BLIND Hardware version"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "Is the bluetooth activated"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "BLIND FriendlyName"
            },
            "daisyChainEnabled": {
              "type": "boolean",
              "description": "Daisy chained enabled"
            },
            "daisyChainPos": {
              "type": "integer",
              "description": "Daisy chained position",
              "format": "int32"
            },
            "voltageInput": {
              "type": "integer",
              "description": "Voltage input",
              "format": "int32"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "windowStatus1": {
              "type": "boolean",
              "description": "Is the window 1 open"
            },
            "windowStatus2": {
              "type": "boolean",
              "description": "Is the window 2 open"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "LedStatus": {
          "title": "LedStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "LED mac address"
            },
            "ip": {
              "type": "string",
              "description": "Led IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "LED communication protocol"
            },
            "topic": {
              "type": "string",
              "description": "LED communication topic"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the LED configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "LED Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "LED Hardware version"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "Is the bluetooth activated"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "KED FriendlyName"
            },
            "pMax": {
              "type": "integer",
              "description": "pMax",
              "format": "int32"
            },
            "duration": {
              "type": "number",
              "description": "brightness duration"
            },
            "setpoint": {
              "type": "integer",
              "description": "Setpoint value in percentage",
              "format": "int32"
            },
            "thresholdLow": {
              "type": "integer",
              "description": "Threshold low in percentage",
              "format": "int32"
            },
            "thresholdHigh": {
              "type": "integer",
              "description": "Threshold high in percentage",
              "format": "int32"
            },
            "daisyChainEnabled": {
              "type": "boolean",
              "description": "Daisy chained enabled"
            },
            "daisyChainPos": {
              "type": "integer",
              "description": "Daisy chained position",
              "format": "int32"
            },
            "devicePower": {
              "type": "integer",
              "description": "Device power",
              "format": "int32"
            },
            "energy": {
              "type": "number",
              "description": "Energy"
            },
            "voltageLed": {
              "type": "integer",
              "description": "Voltage LED",
              "format": "int32"
            },
            "voltageInput": {
              "type": "integer",
              "description": "Voltage input",
              "format": "int32"
            },
            "linePower": {
              "type": "integer",
              "description": "input line power",
              "format": "int32"
            },
            "timeToAuto": {
              "type": "integer",
              "description": "remaining time to automatic mode in second",
              "format": "int32"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "Error": {
          "title": "Error",
          "required": [
            "code",
            "message"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "BleMode": {
          "title": "BleMode",
          "enum": [
            "service",
            "iBeacon"
          ],
          "type": "string",
          "description": "bluetooth mode",
          "example": "service"
        },
        "DeviceType": {
          "title": "DeviceType",
          "enum": [
            "led",
            "sensor",
            "blind",
            "hvac",
            "switch"
          ],
          "type": "string",
          "description": "device category LED|Sensor|etc.",
          "example": "led"
        },
        "getFunctionsResponse": {
          "title": "getFunctionsResponse",
          "type": "object",
          "properties": {
            "functions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "list of available functions"
            }
          }
        },
        "SensorRule": {
          "title": "SensorRule",
          "enum": [
            "average",
            "min",
            "max"
          ],
          "type": "string",
          "description": "Rule when multiple sensors are presents in the same group",
          "example": "average"
        }
    },
        "securitySchemes": {}
    },
    "security": [],
    "tags": [
      {
        "name": "project",
        "description": "GTB configuration: project config"
      },
      {
        "name": "command",
        "description": "Drivers and groups control"
      },
      {
        "name": "status",
        "description": "Drivers and groups status"
      },
      {
        "name": "dump",
        "description": "Drivers and groups dump"
      }
    ]
  }