{
    "openapi": "3.0.0",
    "info": {
      "title": "GTB Swagger",
      "description": "GTB server API",
      "contact": {
        "email": "developer@energie-ip.com"
      },
      "version": "1.0"
    },
    "servers": [
      {
        "url": "/{basePath}",
        "variables": {
          "basePath": {
            "default": "v1.0"
          }
        }
      }
    ],
    "paths": {
      "/user/login": {
        "post": {
          "tags": [
            "authentication"
          ],
          "summary": "createToken",
          "description": "User authentication",
          "operationId": "CreateToken",
          "parameters": [],
          "requestBody": {
            "description": "User credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateTokenResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      },
      "/user/info": {
        "get": {
          "tags": [
            "authentication"
          ],
          "summary": "user Information",
          "description": "User info",
          "operationId": "getUserInfo",
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/user/logout": {
        "post": {
          "tags": [
            "authentication"
          ],
          "summary": "delete Token",
          "description": "User logout",
          "operationId": "RemoveToken",
          "parameters": [],
          "responses": {
            "200": {
              "description": "sucessful operation"
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/sensor/{mac}": {
        "get": {
          "tags": [
            "setup"
          ],
          "summary": "getSensorSetup",
          "description": "Return Sensor Setup configuration",
          "operationId": "GetSensorSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Sensor Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SensorSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "setup"
          ],
          "summary": "removeSensorSetup",
          "description": "Remove Sensor Setup configuration. It means the driver Sensor will be blacklisted",
          "operationId": "RemoveSensorSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Sensor Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/sensor": {
        "post": {
          "tags": [
            "setup"
          ],
          "summary": "setSensorSetup",
          "description": "Sensor Setup configuration",
          "operationId": "SetSensorSetup",
          "parameters": [],
          "requestBody": {
            "description": "Sensor config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorSetup"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SensorSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/blind/{mac}": {
        "get": {
          "tags": [
            "setup"
          ],
          "summary": "getBlindSetup",
          "description": "Return Blind Setup configuration",
          "operationId": "GetBlindSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Blind Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlindSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "setup"
          ],
          "summary": "removeBlindSetup",
          "description": "Remove Blind Setup configuration. It means the driver Blind will be blacklisted",
          "operationId": "RemoveBlindSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Blind Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/blind": {
        "post": {
          "tags": [
            "setup"
          ],
          "summary": "setBlindSetup",
          "description": "Blind configuration",
          "operationId": "SetBlindSetup",
          "parameters": [],
          "requestBody": {
            "description": "Blind config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlindSetup"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlindSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/hvac/{mac}": {
        "get": {
          "tags": [
            "setup"
          ],
          "summary": "getHvacSetup",
          "description": "Return Hvac Setup configuration",
          "operationId": "GetHvacSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Hvac Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HvacSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "setup"
          ],
          "summary": "removeHvacSetup",
          "description": "Remove Hvac Setup configuration. It means the driver Hvac will be blacklisted",
          "operationId": "RemoveHvacSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Hvac Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/hvac": {
        "post": {
          "tags": [
            "setup"
          ],
          "summary": "setHvacSetup",
          "description": "Hvac configuration",
          "operationId": "SetHvacSetup",
          "parameters": [],
          "requestBody": {
            "description": "Hvac config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HvacSetup"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HvacSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/led/{mac}": {
        "get": {
          "tags": [
            "setup"
          ],
          "summary": "getLedSetup",
          "description": "Return LED Setup configuration",
          "operationId": "GetLedSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Led Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LedSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "setup"
          ],
          "summary": "removeLedSetup",
          "description": "Remove LED Setup configuration. It means the driver LED will be blacklisted",
          "operationId": "RemoveLedSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Led Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/led": {
        "post": {
          "tags": [
            "setup"
          ],
          "summary": "setLedSetup",
          "description": "LED Setup configuration",
          "operationId": "SetLedSetup",
          "parameters": [],
          "requestBody": {
            "description": "led config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedSetup"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/group/{groupID}": {
        "get": {
          "tags": [
            "setup"
          ],
          "summary": "getGroupSetup",
          "description": "Return Group Setup configuration",
          "operationId": "GetGroupSetup",
          "parameters": [
            {
              "name": "groupID",
              "in": "path",
              "description": "Group Number",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "setup"
          ],
          "summary": "removeGroupSetup",
          "description": "Remove Group Setup configuration",
          "operationId": "RemoveGroupSetup",
          "parameters": [
            {
              "name": "groupID",
              "in": "path",
              "description": "Group Number",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/group": {
        "post": {
          "tags": [
            "setup"
          ],
          "summary": "setGroupSetup",
          "description": "Group Setup configuration",
          "operationId": "SetGroupSetup",
          "parameters": [],
          "requestBody": {
            "description": "Group config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetup"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/switch/{mac}": {
        "get": {
          "tags": [
            "setup"
          ],
          "summary": "getSwitchSetup",
          "description": "Return Switch Setup configuration",
          "operationId": "GetSwitchSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Switch Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SwitchConfig"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "setup"
          ],
          "summary": "removeSwitchSetup",
          "description": "Remove Switch Setup configuration It means the Switch will be blacklisted",
          "operationId": "RemoveSwitchSetup",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Switch mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/switch": {
        "post": {
          "tags": [
            "setup"
          ],
          "summary": "setSwitchSetup",
          "description": "Switch Setup configuration",
          "operationId": "SetSwitchSetup",
          "parameters": [],
          "requestBody": {
            "description": "Switch config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchConfig"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/service/{name}": {
        "get": {
          "tags": [
            "setup"
          ],
          "summary": "getServiceSetup",
          "description": "Return Service Setup configuration",
          "operationId": "GetServiceSetup",
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "Service name",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ServiceSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "setup"
          ],
          "summary": "removeServiceSetup",
          "description": "Remove Service Setup configuration",
          "operationId": "RemoveServiceSetup",
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "Service name",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/setup/service": {
        "post": {
          "tags": [
            "setup"
          ],
          "summary": "setServiceSetup",
          "description": "Service Setup configuration",
          "operationId": "SetServiceSetup",
          "parameters": [],
          "requestBody": {
            "description": "service config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceSetup"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ServiceSetup"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/config/sensor": {
        "post": {
          "tags": [
            "config"
          ],
          "summary": "setSensorConfig",
          "description": "Change Sensor runtime configuration",
          "operationId": "SetSensorConfig",
          "parameters": [],
          "requestBody": {
            "description": "Sensor runtime config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorConfig"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation, Configuration read from database",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/config/led": {
        "post": {
          "tags": [
            "config"
          ],
          "summary": "setLedConfig",
          "description": "Change LED runtime configuration",
          "operationId": "SetLedConfig",
          "parameters": [],
          "requestBody": {
            "description": "LED runtime config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedConfig"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation, Configuration read from database",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/config/blind": {
        "post": {
          "tags": [
            "config"
          ],
          "summary": "setBlindConfig",
          "description": "Change Blind runtime configuration",
          "operationId": "SetBlindConfig",
          "parameters": [],
          "requestBody": {
            "description": "Blind runtime config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlindConfig"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation, Configuration read from database",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/config/hvac": {
        "post": {
          "tags": [
            "config"
          ],
          "summary": "setHvacConfig",
          "description": "Change Hvac runtime configuration",
          "operationId": "SetHvacConfig",
          "parameters": [],
          "requestBody": {
            "description": "Hvac runtime config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HvacConfig"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation, Configuration read from database",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/config/group": {
        "post": {
          "tags": [
            "config"
          ],
          "summary": "setGroupConfig",
          "description": "Group runtime configuration",
          "operationId": "SetGroupConfig",
          "parameters": [],
          "requestBody": {
            "description": "Group config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupConfig"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/config/switch": {
        "post": {
          "tags": [
            "config"
          ],
          "summary": "setSwitchConfig",
          "description": "Switch runtime configuration",
          "operationId": "SetSwitchConfig",
          "parameters": [],
          "requestBody": {
            "description": "Switch config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchConfig"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/configs": {
        "post": {
          "tags": [
            "config"
          ],
          "summary": "setConfigs",
          "description": "Update runtime configuration",
          "operationId": "SetConfigs",
          "parameters": [],
          "requestBody": {
            "description": "Switch config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/map/upload": {
        "post": {
          "tags": [
            "map"
          ],
          "summary": "upload Map",
          "description": "upload map",
          "operationId": "uploadHandler",
          "parameters": [],
          "requestBody": {
            "description": "IFC file to upload",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "file",
                      "description": "file to upload"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/map/upload/status": {
        "get": {
          "tags": [
            "map"
          ],
          "summary": "upload Map status",
          "description": "upload map status",
          "operationId": "uploadStatus",
          "parameters": [],
          "requestBody": {
            "description": "Get upload status"
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UploadStatus"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/project/ifcInfo/{label}": {
        "get": {
          "tags": [
            "project"
          ],
          "summary": "getIfcInfo",
          "description": "Describe the ifc information",
          "operationId": "GetIfcInfo",
          "parameters": [
            {
              "name": "label",
              "in": "path",
              "description": "Ifc label value",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IfcInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "project"
          ],
          "summary": "removeIfcInfo",
          "description": "Remove Ifc information",
          "operationId": "RemoveIfcInfo",
          "parameters": [
            {
              "name": "label",
              "in": "path",
              "description": "Ifc label value",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/project/ifcInfo": {
        "post": {
          "tags": [
            "project"
          ],
          "summary": "setIfcInfo",
          "description": "Add/update Ifc information",
          "operationId": "SetIfcInfo",
          "parameters": [],
          "requestBody": {
            "description": "ifc detail description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IfcInfo"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IfcInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/project/bim": {
        "post": {
          "tags": [
            "project"
          ],
          "summary": "setBim",
          "description": "Add/update bim information",
          "operationId": "SetBim",
          "parameters": [],
          "requestBody": {
            "description": "bim detail description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BimInfo"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BimInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/project/bim/{label}": {
        "get": {
          "tags": [
            "project"
          ],
          "summary": "getBim",
          "description": "Describe the model information",
          "operationId": "GetBim",
          "parameters": [
            {
              "name": "label",
              "in": "path",
              "description": "Ifc label value",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BimInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "project"
          ],
          "summary": "removeBim",
          "description": "Remove Bim information",
          "operationId": "RemoveBim",
          "parameters": [
            {
              "name": "label",
              "in": "path",
              "description": "Label name",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/project/model/{modelName}": {
        "get": {
          "tags": [
            "project"
          ],
          "summary": "getModelInfo",
          "description": "Describe the model information",
          "operationId": "GetModelInfo",
          "parameters": [
            {
              "name": "modelName",
              "in": "path",
              "description": "Ifc modelName value",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ModelInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "delete": {
          "tags": [
            "project"
          ],
          "summary": "removeModelInfo",
          "description": "Remove Model information",
          "operationId": "RemoveModelInfo",
          "parameters": [
            {
              "name": "modelName",
              "in": "path",
              "description": "Model name",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/project/model": {
        "post": {
          "tags": [
            "project"
          ],
          "summary": "setModelInfo",
          "description": "Add/update model information",
          "operationId": "SetModelInfo",
          "parameters": [],
          "requestBody": {
            "description": "Model detail description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelInfo"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ModelInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/project": {
        "get": {
          "tags": [
            "project"
          ],
          "summary": "getIfc",
          "description": "Dump all the ifc information",
          "operationId": "GetIfc",
          "parameters": [],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IfcInfo"
                    },
                    "description": "sucessful operation"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/events": {
        "get": {
          "tags": [
            "event"
          ],
          "summary": "events",
          "description": "pop event",
          "operationId": "Events",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/events/consumption": {
        "get": {
          "tags": [
            "event"
          ],
          "summary": "eventsConsumption",
          "description": "pop event consumption",
          "operationId": "EventsConsumption",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/command/led": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendLedCommand",
          "description": "Send LED command",
          "operationId": "SendLedCommand",
          "parameters": [],
          "requestBody": {
            "description": "LED Command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/command/blind": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendBlindCommand",
          "description": "Send Blind command",
          "operationId": "SendBlindCommand",
          "parameters": [],
          "requestBody": {
            "description": "Blind Command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlindCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/command/hvac": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendHvacCommand",
          "description": "Send Hvac command",
          "operationId": "SendHvacCommand",
          "parameters": [],
          "requestBody": {
            "description": "Hvac Command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HvacCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/command/group": {
        "post": {
          "tags": [
            "command"
          ],
          "summary": "sendGroupCommand",
          "description": "Send Group command",
          "operationId": "SendGroupCommand",
          "parameters": [],
          "requestBody": {
            "description": "Group command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupCommand"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/status/sensor/{mac}": {
        "get": {
          "tags": [
            "status"
          ],
          "summary": "getSensorStatus",
          "description": "Return the given sensor status",
          "operationId": "GetSensorStatus",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Sensor Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SensorStatus"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/status/groups": {
        "get": {
          "tags": [
            "status"
          ],
          "summary": "getGroupsStatus",
          "description": "Return all group status",
          "operationId": "GetGroupsStatus",
          "parameters": [],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GroupStatus"
                    },
                    "description": "sucessful operation"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/status/group/{groupID}": {
        "get": {
          "tags": [
            "status"
          ],
          "summary": "getGroupStatus",
          "description": "Return the given group status",
          "operationId": "GetGroupStatus",
          "parameters": [
            {
              "name": "groupID",
              "in": "path",
              "description": "group ID",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupStatus"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/status/led/{mac}": {
        "get": {
          "tags": [
            "status"
          ],
          "summary": "getLedStatus",
          "description": "Return the given LED status",
          "operationId": "GetLedStatus",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "LED Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LedStatus"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/status/blind/{mac}": {
        "get": {
          "tags": [
            "status"
          ],
          "summary": "getBlindStatus",
          "description": "Return the given Blind status",
          "operationId": "GetBlindStatus",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Blind Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BlindStatus"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/status/hvac/{mac}": {
        "get": {
          "tags": [
            "status"
          ],
          "summary": "getHvacStatus",
          "description": "Return the given Hvac status",
          "operationId": "GetHvacStatus",
          "parameters": [
            {
              "name": "mac",
              "in": "path",
              "description": "Hvac Mac address",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HvacStatus"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/status": {
        "get": {
          "tags": [
            "status"
          ],
          "summary": "getStatus",
          "description": "Dump the Complete status with filter",
          "operationId": "GetStatus",
          "parameters": [
            {
              "name": "isConfigured",
              "in": "query",
              "description": "Filter by isConfigured device",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupID",
              "in": "query",
              "description": "Filter by groupID",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "Filter by driver type",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/dump": {
        "get": {
          "tags": [
            "dump"
          ],
          "summary": "getDump",
          "description": "Dump the Complete dump with filter",
          "operationId": "GetDump",
          "parameters": [
            {
              "name": "macs",
              "in": "query",
              "description": "Filter by mac address. By default: all",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "labels",
              "in": "query",
              "description": "Filter by IFC label. By default: all",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Dump"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/history": {
        "get": {
          "tags": [
            "history"
          ],
          "summary": "getHistory",
          "description": "Return Complete consumption history",
          "operationId": "GetHistory",
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/History"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/commissioning/install": {
        "post": {
          "tags": [
            "commissioning"
          ],
          "summary": "installDriver",
          "description": "Associate a driver to a cable",
          "operationId": "InstallDriver",
          "parameters": [],
          "requestBody": {
            "description": "driver detail description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverInfo"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/maintenance/driver": {
        "post": {
          "tags": [
            "maintenance"
          ],
          "summary": "replaceDriver",
          "description": "Replace a driver",
          "operationId": "ReplaceDriver",
          "parameters": [],
          "requestBody": {
            "description": "driver detail description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceDriver"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized Access",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },
      "/functions": {
        "get": {
          "summary": "getFunctions",
          "description": "Return the list of available API functions",
          "operationId": "GetFunctions",
          "parameters": [],
          "responses": {
            "200": {
              "description": "sucessful operation",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/getFunctionsResponse"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        }
      }
    },
    "components": {
      "schemas": {
        "Config": {
          "title": "Config",
          "type": "object",
          "properties": {
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupConfig"
              },
              "description": ""
            },
            "leds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LedConfig"
              },
              "description": ""
            },
            "sensors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SensorConfig"
              },
              "description": ""
            },
            "switchs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SensorConfig"
              },
              "description": ""
            },
            "blinds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlindConfig"
              },
              "description": ""
            },
            "hvacs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HvacConfig"
              },
              "description": ""
            }
          }
        },
        "SensorSetup": {
          "title": "SensorSetup",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Sensor mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "brightnessCorrectionFactor": {
              "type": "integer",
              "description": "Brightness correction factor",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Sensor FriendlyName"
            },
            "thresholdPresence": {
              "type": "integer",
              "description": "Threshold presence",
              "format": "int32"
            },
            "temperatureOffset": {
              "type": "integer",
              "description": "Temperature offset correction",
              "format": "int32"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "SensorConfig": {
          "title": "SensorConfig",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Sensor mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the sensor configured"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "brightnessCorrectionFactor": {
              "type": "integer",
              "description": "Brightness correction factor",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Sensor FriendlyName"
            },
            "thresholdPresence": {
              "type": "integer",
              "description": "Threshold presence",
              "format": "int32"
            },
            "temperatureOffset": {
              "type": "integer",
              "description": "Temperature offset correction",
              "format": "int32"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "ActionProfile": {
          "title": "ActionProfile",
          "required": [
            "action"
          ],
          "type": "object",
          "properties": {
            "action": {
              "type": "integer",
              "description": "Action on the Blind: 0:stop, 1 Openning, 2: Closing",
              "format": "int32"
            },
            "duration": {
              "type": "integer",
              "description": "Action duration in milliseconds",
              "format": "int32"
            }
          }
        },
        "BlindProfile": {
          "title": "BlindProfile",
          "required": [
            "up",
            "down",
            "stop",
            "windowOpen",
            "slatDuration"
          ],
          "type": "object",
          "properties": {
            "up": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionProfile"
              },
              "description": "Action sequences"
            },
            "down": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionProfile"
              },
              "description": "Action sequences"
            },
            "stop": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionProfile"
              },
              "description": "Action sequences"
            },
            "windowOpen": {
              "type": "boolean",
              "description": "When the window is open, is the driver still up and running?"
            },
            "slatDuration": {
              "type": "string",
              "description": "Timing for the slat configuration in Milliseconds"
            }
          }
        },
        "BlindSetup": {
          "title": "BlindSetup",
          "required": [
            "mac",
            "profile"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Blind mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "profile": {
              "$ref": "#/components/schemas/BlindProfile"
            },
            "friendlyName": {
              "type": "string",
              "description": "BLIND FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "BlindConfig": {
          "title": "BlindConfig",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Blind mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "profile": {
              "$ref": "#/components/schemas/BlindProfile"
            },
            "friendlyName": {
              "type": "string",
              "description": "BLIND FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the Blind configured"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "BlindCommand": {
          "title": "BlindCommand",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Blind mac address"
            },
            "blind1": {
              "type": "integer",
              "description": "blind1 0: stop, 1: Openning, 2: Closing",
              "format": "int32"
            },
            "blind2": {
              "type": "integer",
              "description": "blind2 0: stop, 1: Openning, 2: Closing",
              "format": "int32"
            },
            "slat1": {
              "type": "integer",
              "description": "Slat orientation",
              "format": "int32"
            },
            "slat2": {
              "type": "integer",
              "description": "Slat orientation",
              "format": "int32"
            }
          }
        },
        "HvacSetup": {
          "title": "HvacSetup",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Hvac mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "HVAC FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "HvacConfig": {
          "title": "HvacConfig",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Hvac mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "HVAC FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the Hvac configured"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "HvacCommand": {
          "title": "HvacCommand",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Hvac mac address"
            }
          }
        },
        "LedSetup": {
          "title": "LedSetup",
          "required": [
            "mac",
            "pMax"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "LED mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "pMax": {
              "type": "integer",
              "description": "pMax",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "thresholdLow": {
              "type": "integer",
              "description": "Threshold low in percentage",
              "format": "int32"
            },
            "thresholdHigh": {
              "type": "integer",
              "description": "Threshold high in percentage",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "LED FriendlyName"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            }
          }
        },
        "LedConfig": {
          "title": "LedConfig",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "LED mac address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "bluetooth activation"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Reset the led configuration"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "thresholdLow": {
              "type": "integer",
              "description": "Threshold low",
              "format": "int32"
            },
            "thresholdHigh": {
              "type": "integer",
              "description": "Threshold high",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "LED FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "LedCommand": {
          "title": "LedCommand",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Led mac address"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "setpoint": {
              "type": "integer",
              "description": "Setpoint value in percentage",
              "format": "int32"
            }
          }
        },
        "SwitchConfig": {
          "title": "SwitchConfig",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Switch mac address"
            },
            "cluster": {
              "type": "integer",
              "description": "Associate Cluster number",
              "format": "int32"
            },
            "ip": {
              "type": "string",
              "description": "Switch IP address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Reset the led configuration"
            },
            "friendlyName": {
              "type": "string",
              "description": "SWITCH FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "ModelInfo": {
          "title": "ModelInfo",
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Driver Model name"
            },
            "vendor": {
              "type": "string",
              "description": "vendor name"
            },
            "deviceType": {
              "$ref": "#/components/schemas/DeviceType"
            },
            "url": {
              "type": "string",
              "description": "weblink to the technical description"
            }
          }
        },
        "DriverInfo": {
          "title": "DriverInfo",
          "required": [
            "label",
            "device",
            "fullMac"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "description": "label name available in the IFC for identifying the element"
            },
            "device": {
              "type": "string",
              "enum": [
                "LED",
                "SENSOR",
                "BLIND",
                "HVAC",
                "SWITCH"
              ],
              "example": "LED",
              "description": "Device Type"
            },
            "fullMac": {
              "type": "string",
              "description": "device mac address (long version)"
            }
          }
        },
        "ReplaceDriver": {
          "title": "ReplaceDriver",
          "required": [
            "oldFullMac",
            "newFullMac"
          ],
          "type": "object",
          "properties": {
            "oldFullMac": {
              "type": "string",
              "description": "Previous driver mac address"
            },
            "newFullMac": {
              "type": "string",
              "description": "New Driver Mac Address"
            }
          }
        },
        "BimInfo": {
          "title": "BimInfo",
          "required": [
            "label"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "description": "label name available in the IFC for identifying the element"
            },
            "modelName": {
              "type": "string",
              "description": "Model name"
            },
            "mac": {
              "type": "string",
              "description": "device mac address (short version)"
            },
            "fullMac": {
              "type": "string",
              "description": "device mac address (long version)"
            },
            "modbusID": {
              "type": "integer",
              "description": "Modbus unique ID",
              "format": "int32"
            },
            "slaveID": {
              "type": "integer",
              "description": "Slave unique ID",
              "format": "int32"
            }
          }
        },
        "IfcInfo": {
          "title": "IfcInfo",
          "required": [
            "label"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "description": "label name available in the IFC for identifying the element"
            },
            "modelName": {
              "type": "string",
              "description": "Model name"
            },
            "mac": {
              "type": "string",
              "description": "device mac address"
            },
            "vendor": {
              "type": "string",
              "description": "vendor name"
            },
            "deviceType": {
              "$ref": "#/components/schemas/DeviceType"
            },
            "url": {
              "type": "string",
              "description": "weblink to the technical description"
            },
            "productionYear": {
              "type": "string",
              "description": "production Year"
            },
            "modbusID": {
              "type": "integer",
              "description": "Modbus unique ID",
              "format": "int32"
            },
            "slaveID": {
              "type": "integer",
              "description": "Slave unique ID",
              "format": "int32"
            }
          }
        },
        "GroupStatus": {
          "title": "GroupStatus",
          "required": [
            "group"
          ],
          "type": "object",
          "properties": {
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "slopeStartManual": {
              "type": "integer",
              "description": "slopeStart Manual in second",
              "format": "int32"
            },
            "slopeStopManual": {
              "type": "integer",
              "description": "slopeStop Manual in second",
              "format": "int32"
            },
            "slopeStartAuto": {
              "type": "integer",
              "description": "slopeStart Auto in second",
              "format": "int32"
            },
            "slopeStopAuto": {
              "type": "integer",
              "description": "slopeStop Auto in second",
              "format": "int32"
            },
            "sensorRule": {
              "$ref": "#/components/schemas/SensorRule"
            },
            "correctionInterval": {
              "type": "integer",
              "description": "correctionInterval in second",
              "format": "int32"
            },
            "leds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses"
            },
            "sensors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of Sensor mac addresses"
            },
            "ruleBrightness": {
              "type": "integer",
              "description": "Brightness in Lux",
              "format": "int32"
            },
            "firstDayOffset": {
              "type": "integer",
              "description": "Offset in percentage between 1st and 2nd Days",
              "format": "int32"
            },
            "rulePresence": {
              "type": "integer",
              "description": "Presence in Second",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "presence": {
              "type": "boolean",
              "description": "is set to true if at least one sensor detect a movement"
            },
            "brightness": {
              "type": "integer",
              "description": "Compute Brightness in the group (Lux)",
              "format": "int32"
            },
            "temperature": {
              "type": "integer",
              "description": "Compute Temperature in the group (1/10°C)",
              "format": "int32"
            },
            "humidity": {
              "type": "integer",
              "description": "Compute Humidity in the group (1/10%)",
              "format": "int32"
            },
            "windowsOpened": {
              "type": "boolean",
              "description": "is set to true if at least one window is opened"
            },
            "timeToAuto": {
              "type": "integer",
              "description": "Remaining time before switching back to auto mode",
              "format": "int32"
            },
            "timeToLeave": {
              "type": "integer",
              "description": "Remaining time before considering the room as empty",
              "format": "int32"
            },
            "setpointLeds": {
              "type": "integer",
              "description": "Current led setpoint value in percentage",
              "format": "int32"
            },
            "firstDay": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses which are in 1st Day"
            },
            "setpointLedsFirstDay": {
              "type": "integer",
              "description": "Current led setpoint value in percentage for the 1st Day",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Sensor FriendlyName"
            }
          }
        },
        "GroupSetup": {
          "title": "GroupSetup",
          "required": [
            "group"
          ],
          "type": "object",
          "properties": {
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "slopeStartManual": {
              "type": "integer",
              "description": "slopeStart Manual in second",
              "format": "int32"
            },
            "slopeStopManual": {
              "type": "integer",
              "description": "slopeStop Manual in second",
              "format": "int32"
            },
            "slopeStartAuto": {
              "type": "integer",
              "description": "slopeStart Auto in second",
              "format": "int32"
            },
            "slopeStopAuto": {
              "type": "integer",
              "description": "slopeStop Auto in second",
              "format": "int32"
            },
            "sensorRule": {
              "$ref": "#/components/schemas/SensorRule"
            },
            "correctionInterval": {
              "type": "integer",
              "description": "correctionInterval in second",
              "format": "int32"
            },
            "leds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses"
            },
            "sensors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of Sensor mac addresses"
            },
            "ruleBrightness": {
              "type": "integer",
              "description": "Brightness in Lux",
              "format": "int32"
            },
            "rulePresence": {
              "type": "integer",
              "description": "Presence in Second",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Group FriendlyName"
            },
            "firstDay": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses which are in 1st Day"
            },
            "firstDayOffset": {
              "type": "integer",
              "description": "Offset in percentage between 1st and 2nd Days",
              "format": "int32"
            }
          }
        },
        "GroupConfig": {
          "title": "GroupConfig",
          "required": [
            "group"
          ],
          "type": "object",
          "properties": {
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "slopeStartAuto": {
              "type": "integer",
              "description": "slopeStart Auto in second",
              "format": "int32"
            },
            "slopeStopAuto": {
              "type": "integer",
              "description": "slopeStop Auto in second",
              "format": "int32"
            },
            "slopeStartManual": {
              "type": "integer",
              "description": "slopeStart Manual in second",
              "format": "int32"
            },
            "slopeStopManual": {
              "type": "integer",
              "description": "slopeStop Manual in second",
              "format": "int32"
            },
            "sensorRule": {
              "$ref": "#/components/schemas/SensorRule"
            },
            "correctionInterval": {
              "type": "integer",
              "description": "correctionInterval in second",
              "format": "int32"
            },
            "leds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses"
            },
            "sensors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of Sensor mac addresses"
            },
            "ruleBrightness": {
              "type": "integer",
              "description": "Brightness in Lux",
              "format": "int32"
            },
            "rulePresence": {
              "type": "integer",
              "description": "Presence in Second",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Group FriendlyName"
            },
            "firstDay": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of LED mac addresses which are in 1st Day"
            },
            "firstDayOffset": {
              "type": "integer",
              "description": "Offset in percentage between 1st and 2nd Days",
              "format": "int32"
            }
          }
        },
        "GroupCommand": {
          "title": "GroupCommand",
          "required": [
            "group"
          ],
          "type": "object",
          "properties": {
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "setpointLeds": {
              "type": "integer",
              "description": "Led Setpoint value",
              "format": "int32"
            },
            "setpointBlinds": {
              "type": "integer",
              "description": "Blind Setoint value",
              "format": "int32"
            },
            "setpointSlats": {
              "type": "integer",
              "description": "Slat Setoint value",
              "format": "int32"
            }
          }
        },
        "Event": {
          "title": "Event",
          "required": [
            "eventType",
            "status"
          ],
          "type": "object",
          "properties": {
            "eventType": {
              "type": "string",
              "description": "event category add|update|remove"
            },
            "status": {
              "$ref": "#/components/schemas/Status"
            }
          }
        },
        "ConsumptionEvent": {
          "title": "ConsumptionEvent",
          "required": [
            "date"
          ],
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Event date",
              "format": "date-time"
            },
            "leds": {
              "type": "integer",
              "description": "Cumulative puissance leds in Watts",
              "format": "int32"
            },
            "blinds": {
              "type": "string",
              "description": "Cumulative puissance blinds in Watts"
            },
            "hvacs": {
              "type": "string",
              "description": "Cumulative puissance hvacs in Watts"
            }
          }
        },
        "SensorStatus": {
          "title": "SensorStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Sensor mac address"
            },
            "ip": {
              "type": "string",
              "description": "Sensor IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "Sensor communication protocol"
            },
            "topic": {
              "type": "string",
              "description": "Sensor communication topic"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the sensor configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "Sensor Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "Sensor Hardware version"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "Is the bluetooth activate"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "temperature": {
              "type": "integer",
              "description": "Temperature",
              "format": "int32"
            },
            "humidity": {
              "type": "integer",
              "description": "Humidity in percentage",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "brightness": {
              "type": "integer",
              "description": "Corrected Brightness in Lux",
              "format": "int32"
            },
            "presence": {
              "type": "boolean",
              "description": "Presence"
            },
            "brightnessCorrectionFactor": {
              "type": "integer",
              "description": "Brightness correction factor",
              "format": "int32"
            },
            "thresholdPresence": {
              "type": "integer",
              "description": "Threshold presence in Seconds",
              "format": "int32"
            },
            "temperatureOffset": {
              "type": "integer",
              "description": "Temperature offset correcion",
              "format": "int32"
            },
            "brightnessRaw": {
              "type": "integer",
              "description": "Brightness Raw value in Lux",
              "format": "int32"
            },
            "lastMovement": {
              "type": "integer",
              "description": "Last Movement date",
              "format": "int32"
            },
            "voltageInput": {
              "type": "integer",
              "description": "Input voltage",
              "format": "int32"
            },
            "temperatureRaw": {
              "type": "integer",
              "description": "Temperature Raw value",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Sensor FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "Status": {
          "title": "Status",
          "type": "object",
          "properties": {
            "leds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LedStatus"
              },
              "description": "List of leds status"
            },
            "sensors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SensorStatus"
              },
              "description": "List of sensors status"
            },
            "blinds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlindStatus"
              },
              "description": "List of blinds status"
            },
            "hvacs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HvacStatus"
              },
              "description": "List of hvacs status"
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupStatus"
              },
              "description": "List of groups status"
            }
          }
        },
        "History": {
          "title": "History",
          "type": "object",
          "properties": {
            "leds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LedHistory"
              },
              "description": "List of leds history"
            },
            "blinds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlindHistory"
              },
              "description": "List of blinds history"
            },
            "switchs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SwitchHistory"
              },
              "description": "List of switchs history"
            }
          }
        },
        "LedHistory": {
          "title": "LedHistory",
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date"
            },
            "energy": {
              "type": "number",
              "description": "Energy"
            },
            "power": {
              "type": "integer",
              "description": "Power",
              "format": "int32"
            }
          }
        },
        "BlindHistory": {
          "title": "BlindHistory",
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date"
            },
            "energy": {
              "type": "number",
              "description": "Energy"
            },
            "power": {
              "type": "integer",
              "description": "Power",
              "format": "int32"
            }
          }
        },
        "SwitchHistory": {
          "title": "SwitchHistory",
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date"
            },
            "energy": {
              "type": "number",
              "description": "Energy"
            },
            "power": {
              "type": "integer",
              "description": "Power",
              "format": "int32"
            }
          }
        },
        "Dump": {
          "title": "Dump",
          "type": "object",
          "properties": {
            "leds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LedDump"
              },
              "description": "List of leds dump"
            },
            "sensors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SensorDump"
              },
              "description": "List of sensors dump"
            },
            "blinds": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlindDump"
              },
              "description": "List of blinds dump"
            },
            "hvacs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HvacDump"
              },
              "description": "List of hvacs dump"
            },
            "switchs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SwitchDump"
              },
              "description": "List of switchs dump"
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupDump"
              },
              "description": "List of groups dump"
            }
          }
        },
        "LedDump": {
          "title": "LedDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/LedStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/LedSetup"
            }
          }
        },
        "SensorDump": {
          "title": "SensorDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/SensorStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/SensorSetup"
            }
          }
        },
        "BlindDump": {
          "title": "BlindDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/BlindStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/BlindSetup"
            }
          }
        },
        "HvacDump": {
          "title": "HvacDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/HvacStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/HvacSetup"
            }
          }
        },
        "GroupDump": {
          "title": "GroupDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/GroupStatus"
            },
            "config": {
              "$ref": "#/components/schemas/GroupConfig"
            }
          }
        },
        "SwitchDump": {
          "title": "SwitchDump",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/SwitchStatus"
            },
            "ifc": {
              "$ref": "#/components/schemas/IfcInfo"
            },
            "config": {
              "$ref": "#/components/schemas/SwitchConfig"
            }
          }
        },
        "SwitchStatus": {
          "title": "SwitchStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "LED mac address"
            },
            "ip": {
              "type": "string",
              "description": "Led IP address"
            },
            "cluster": {
              "type": "integer",
              "description": "Associate cluster",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "SWITCH communication protocol"
            },
            "topic": {
              "type": "string",
              "description": "SWITCH communication topic"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the SWITCH configured"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "SWITCH FriendlyName"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "lastSystemUpgradeDate": {
              "type": "string",
              "description": "Last system upgrade date"
            }
          }
        },
        "HvacStatus": {
          "title": "HvacStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "Hvac mac address"
            },
            "ip": {
              "type": "string",
              "description": "Hvac IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "Hvac communication protocol"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the hvac configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "hvac Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "hvac Hardware version"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "Hvac FriendlyName"
            },
            "setpoint": {
              "type": "string",
              "description": "current setpoint"
            },
            "heat": {
              "type": "string",
              "description": "setpoint when the mode is heating"
            },
            "cool": {
              "type": "string",
              "description": "setpoint when the mode is cooling"
            },
            "damper": {
              "type": "string",
              "description": "damper"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "BlindStatus": {
          "title": "BlindStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "BLIND mac address"
            },
            "ip": {
              "type": "string",
              "description": "BLIND IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "BLIND communication protocol"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the blind configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "BLIND Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "BLIND Hardware version"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "Is the bluetooth activated"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "BLIND FriendlyName"
            },
            "daisyChainEnabled": {
              "type": "boolean",
              "description": "Daisy chained enabled"
            },
            "daisyChainPos": {
              "type": "integer",
              "description": "Daisy chained position",
              "format": "int32"
            },
            "voltageInput": {
              "type": "integer",
              "description": "Voltage input",
              "format": "int32"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "windowStatus1": {
              "type": "boolean",
              "description": "Is the window 1 open"
            },
            "windowStatus2": {
              "type": "boolean",
              "description": "Is the window 2 open"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "LedStatus": {
          "title": "LedStatus",
          "required": [
            "mac"
          ],
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "description": "LED mac address"
            },
            "ip": {
              "type": "string",
              "description": "Led IP address"
            },
            "group": {
              "type": "integer",
              "description": "Associate group",
              "format": "int32"
            },
            "protocol": {
              "type": "string",
              "description": "LED communication protocol"
            },
            "topic": {
              "type": "string",
              "description": "LED communication topic"
            },
            "switchMac": {
              "type": "string",
              "description": "Associate switch mac address"
            },
            "isConfigured": {
              "type": "boolean",
              "description": "Is the LED configured"
            },
            "softwareVersion": {
              "type": "number",
              "description": "LED Software version"
            },
            "hardwareVersion": {
              "type": "string",
              "description": "LED Hardware version"
            },
            "isBleEnabled": {
              "type": "boolean",
              "description": "Is the bluetooth activated"
            },
            "bleMode": {
              "$ref": "#/components/schemas/BleMode"
            },
            "iBeaconUUID": {
              "type": "string",
              "description": "ibeacon UUID"
            },
            "iBeaconMajor": {
              "type": "integer",
              "description": "ibeacon Major",
              "format": "int32"
            },
            "iBeaconMinor": {
              "type": "integer",
              "description": "ibeacon Minor",
              "format": "int32"
            },
            "iBeaconTxPower": {
              "type": "integer",
              "description": "ibeacon Tx power",
              "format": "int32"
            },
            "error": {
              "type": "integer",
              "description": "Error code value: 0 means no error",
              "format": "int32"
            },
            "friendlyName": {
              "type": "string",
              "description": "KED FriendlyName"
            },
            "pMax": {
              "type": "integer",
              "description": "pMax",
              "format": "int32"
            },
            "duration": {
              "type": "number",
              "description": "brightness duration"
            },
            "setpoint": {
              "type": "integer",
              "description": "Setpoint value in percentage",
              "format": "int32"
            },
            "thresholdLow": {
              "type": "integer",
              "description": "Threshold low in percentage",
              "format": "int32"
            },
            "thresholdHigh": {
              "type": "integer",
              "description": "Threshold high in percentage",
              "format": "int32"
            },
            "daisyChainEnabled": {
              "type": "boolean",
              "description": "Daisy chained enabled"
            },
            "daisyChainPos": {
              "type": "integer",
              "description": "Daisy chained position",
              "format": "int32"
            },
            "devicePower": {
              "type": "integer",
              "description": "Device power",
              "format": "int32"
            },
            "energy": {
              "type": "number",
              "description": "Energy"
            },
            "voltageLed": {
              "type": "integer",
              "description": "Voltage LED",
              "format": "int32"
            },
            "voltageInput": {
              "type": "integer",
              "description": "Voltage input",
              "format": "int32"
            },
            "linePower": {
              "type": "integer",
              "description": "input line power",
              "format": "int32"
            },
            "timeToAuto": {
              "type": "integer",
              "description": "remaining time to automatic mode in second",
              "format": "int32"
            },
            "watchdog": {
              "type": "integer",
              "description": "watchdog in second",
              "format": "int32"
            },
            "auto": {
              "type": "boolean",
              "description": "Automatic mode"
            },
            "dumpFrequency": {
              "type": "integer",
              "description": "Dump frequency by default: 1s",
              "format": "int32"
            },
            "label": {
              "type": "string",
              "description": "IFC cable label"
            }
          }
        },
        "ServiceSetup": {
          "title": "ServiceSetup",
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Service Name"
            },
            "systemd": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Systemd scripts"
            },
            "version": {
              "type": "string",
              "description": "Package Version"
            },
            "packageName": {
              "type": "string",
              "description": "Debian Package Name"
            },
            "configPath": {
              "type": "string",
              "description": "Configuration Path"
            }
          }
        },
        "Error": {
          "title": "Error",
          "required": [
            "code",
            "message"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "BleMode": {
          "title": "BleMode",
          "enum": [
            "service",
            "iBeacon"
          ],
          "type": "string",
          "description": "bluetooth mode",
          "example": "service"
        },
        "UploadStatus": {
          "title": "UploadStatus",
          "type": "object",
          "properties": {
            "status": {
            "enum": [
              "none",
              "running",
              "failure",
              "success"
            ],
            "type": "string",
            "description": "upload status",
            "example": "none"
            }
          }
        },
        "DeviceType": {
          "title": "DeviceType",
          "enum": [
            "led",
            "sensor",
            "blind",
            "hvac",
            "switch"
          ],
          "type": "string",
          "description": "device category LED|Sensor|etc.",
          "example": "led"
        },
        "getFunctionsResponse": {
          "title": "getFunctionsResponse",
          "type": "object",
          "properties": {
            "functions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "list of available functions"
            }
          }
        },
        "SensorRule": {
          "title": "SensorRule",
          "enum": [
            "average",
            "min",
            "max"
          ],
          "type": "string",
          "description": "Rule when multiple sensors are presents in the same group",
          "example": "average"
        },
        "Credential": {
          "title": "Credential",
          "required": [
            "userKey"
          ],
          "type": "object",
          "properties": {
            "userKey": {
              "type": "string",
              "description": "user key"
            }
          }
        },
        "UserInfo": {
          "title": "UserInfo",
          "type": "object",
          "properties": {
            "userHash": {
              "type": "string",
              "description": "user key"
            },
            "priviledge": {
              "type": "string",
              "enum": [
                "admin",
                "user",
                "maintainer"
              ],
              "example": "user",
              "description": "user priviledge"
            },
            "accessGroups": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "user access group"
            },
            "services": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "remote"
                ],
                "example": "remote"
              },
              "description": "user services"
            }
          }
        },
        "CreateTokenResponse": {
          "title": "CreateTokenResponse",
          "type": "object",
          "properties": {
            "tokenType": {
              "type": "string",
              "description": "Session type",
              "enum": [
                "bearer"
              ]
            },
            "accessToken": {
              "type": "string",
              "description": "Session Token"
            },
            "expireIn": {
              "type": "integer",
              "format": "int32",
              "description": "token expiration in seconds"
            }
          }
        }
      },
      "securitySchemes": {
        "Authorization": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT",
            "description": "For accessing the API a valid JWT token must be passed in all the queries in the Authorization header. Authorization header : Bearer xxxxxx.yyyyyyy.zzzzzz"
        }
      }
    },
    "security": [
      {
        "Authorization": []
      }
    ],
    "tags": [
      {
        "name": "setup",
        "description": "GTB configuration: drivers, switch, group initial setup config"
      },
      {
        "name": "config",
        "description": "GTB configuration: drivers, switch, group runtime config"
      },
      {
        "name": "project",
        "description": "GTB configuration: project config"
      },
      {
        "name": "map",
        "description": "GTB map"
      },
      {
        "name": "event",
        "description": "GTB events"
      },
      {
        "name": "command",
        "description": "Drivers and groups control"
      },
      {
        "name": "status",
        "description": "Drivers and groups status"
      },
      {
        "name": "dump",
        "description": "Drivers and groups dump"
      },
      {
        "name": "history",
        "description": "Driver consumption histories"
      },
      {
        "name": "commissioning",
        "description": "Installation API"
      },
      {
        "name": "maintenance",
        "description": "Maintenance API"
      },
      {
        "name": "authentication",
        "description": "User authentication API"
      }
    ]
  }